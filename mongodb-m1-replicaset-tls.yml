apiVersion: v1
kind: Service
metadata:
  name: m1-replica-set-0-svc-ext
  namespace: mongodb
spec:
  type: NodePort
  ports:
  - port: 27017
    nodePort: 31001
    name: mongodb-port
  selector:
    app: m1-replica-set-0
---
apiVersion: v1
kind: Service
metadata:
  name: m1-replica-set-1-svc-ext
  namespace: mongodb
spec:
  type: NodePort
  ports:
  - port: 27017
    nodePort: 31002
    name: mongodb-port
  selector:
    app: m0-replica-set-1
---
apiVersion: v1
kind: Service
metadata:
  name: m1-replica-set-2-svc-ext
  namespace: mongodb
spec:
  type: NodePort
  ports:
  - port: 27017
    nodePort: 31003
    name: mongodb-port
  selector:
    app: m0-replica-set-1
---
apiVersion: mongodb.com/v1
kind: MongoDB
metadata:
  name: m1-replica-set
  namespace: mongodb
spec:
  members: 3
  version: 4.2.3-ent
  type: ReplicaSet
  opsManager:
    configMapRef:
      name: ops-manager-connection
  credentials: om-main-user-credentials
  # This will create a TLS enabled Replica Set, which means that all the traffic
  # between members of the Replica Set and clients, will be encrypted using TLS
  # certificates. These certificates will be generated on the fly by the operator
  # using the Kubernetes CA.
  # Please refer to Kubernetes TLS Documentation on how to approve these certs:
  #
  # https://kubernetes.io/docs/tasks/tls/managing-tls-in-a-cluster/
  #
  security:
    tls:
      enabled: true
  # The default TLS mode is 'requireTLS' but it can be customized using the
  # the `additionalMongodConfig` structure. Please find more information here:
  # https://docs.mongodb.com/manual/reference/configuration-options/#net.ssl.mode
  additionalMongodConfig:
    net:
      ssl:
        mode: "preferSSL"
  connectivity:
    # replicaSetHorizons consists of a list of maps where each map represents a node within
    # the replica set and maps names of DNS horizons to externally connectable DNS names.
    # In the following example, this would allow a client to make a replica set connection
    # from outside the replica set using a connection string like
    # mongodb://mdb0-test-website.com:1337,mdb1-test-website.com:1338,mdb2-test-website.com:1339.
    # The length of the replicaSetHorizons list must be equal to the number of the members in the
    # replica set and each member should have all of the same DNS horizon names specified.
    replicaSetHorizons:
      - "test-horizon-1": "34.223.108.18:31001"
      - "test-horizon-1": "35.162.40.191:31002"
      - "test-horizon-1": "35.165.164.175:31003"
